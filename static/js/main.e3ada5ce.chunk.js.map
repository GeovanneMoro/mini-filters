{"version":3,"sources":["data.js","store/products.js","Filter.js","Products.js","App.js","store/configureStore.js","index.js"],"names":["data","id","name","color","price","slice","createSlice","initialState","filters","colors","prices","max","min","order","reducers","changeFilters","state","action","payload","value","selectUniqueColors","products","Array","from","Set","map","actions","Filter","cores","useSelector","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","selectedColors","setSelectedColors","setOrder","dispatch","useDispatch","handleChange","target","checked","filter","React","useEffect","Number","className","htmlFor","type","onChange","placeholder","cor","includes","onClick","filterProducts","product","length","sort","a","b","Products","App","reducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3ada5ce.chunk.js","sourcesContent":["const data = [\r\n  {\r\n    id: 1,\r\n    name: 'T-Shirt',\r\n    color: 'blue',\r\n    price: 25,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'T-Shirt',\r\n    color: 'black',\r\n    price: 25,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Shorts ',\r\n    color: 'black',\r\n    price: 35,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Skirt',\r\n    color: 'black',\r\n    price: 22,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Polo Shirt',\r\n    color: 'blue',\r\n    price: 42,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Dress',\r\n    color: 'blue',\r\n    price: 60,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Shirt',\r\n    color: 'pink',\r\n    price: 30,\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport data from '../data';\r\n\r\nconst slice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    data,\r\n    filters: {\r\n      colors: [],\r\n      prices: {\r\n        max: 0,\r\n        min: 0,\r\n      },\r\n      order: 0,\r\n    },\r\n  },\r\n  reducers: {\r\n    changeFilters: (state, action) => {\r\n      state.filters[action.payload.name] = action.payload.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectUniqueColors = ({ products }) =>\r\n  Array.from(new Set(products.data.map(({ color }) => color)));\r\n\r\nexport const { changeFilters } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFilters, selectUniqueColors } from './store/products';\r\n\r\nconst Filter = () => {\r\n  const cores = useSelector(selectUniqueColors);\r\n  const [minPrice, setMinPrice] = useState('');\r\n  const [maxPrice, setMaxPrice] = useState('');\r\n  const [selectedColors, setSelectedColors] = useState([]);\r\n  const [order, setOrder] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(changeFilters({ name: 'order', value: order }));\r\n  }, [order, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(changeFilters({ name: 'colors', value: selectedColors }));\r\n  }, [selectedColors, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(\r\n      changeFilters({\r\n        name: 'prices',\r\n        value: {\r\n          min: Number(minPrice),\r\n          max: Number(maxPrice),\r\n        },\r\n      }),\r\n    );\r\n  }, [minPrice, maxPrice, dispatch]);\r\n\r\n  function handleChange({ target }) {\r\n    if (target.checked) {\r\n      setSelectedColors([...selectedColors, target.value]);\r\n    } else {\r\n      setSelectedColors(\r\n        selectedColors.filter((color) => color !== target.value),\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleChecked(value) {\r\n    return selectedColors.includes(value);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h2>Filters</h2>\r\n      <label className=\"subTitle\" htmlFor=\"minPrice\">\r\n        Minimum Price\r\n      </label>\r\n      <input\r\n        id=\"minPrice\"\r\n        type=\"number\"\r\n        value={minPrice}\r\n        onChange={({ target }) => setMinPrice(target.value)}\r\n        placeholder=\"min\"\r\n      />\r\n      <label className=\"subTitle\" htmlFor=\"maxPrice\">\r\n        Maximum Price\r\n      </label>\r\n      <input\r\n        id=\"maxPrice\"\r\n        type=\"number\"\r\n        value={maxPrice}\r\n        onChange={({ target }) => setMaxPrice(target.value)}\r\n        placeholder=\"max\"\r\n      />\r\n      <span className=\"subTitle\">Cores</span>\r\n      <div className=\"checkbox\">\r\n        {cores?.map((cor) => (\r\n          <label key={cor}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={cor}\r\n              checked={handleChecked(cor)}\r\n              onChange={handleChange}\r\n            />\r\n            {cor}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      <span className=\"subTitle\">Sort by price</span>\r\n\r\n      <div className=\"buttons\">\r\n        <button onClick={() => setOrder(true)}>High</button>\r\n        <button onClick={() => setOrder(false)}>Low</button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst filterOrder = (order) => (a, b) => {\r\n  switch (order) {\r\n    case true:\r\n      return b.price - a.price;\r\n    case false:\r\n      return a.price - b.price;\r\n    default:\r\n      return b;\r\n  }\r\n};\r\n\r\nconst filterColors = (colors) => (product) =>\r\n  !colors.length || colors.includes(product.color);\r\n\r\nconst filterPrices = (prices) => (product) =>\r\n  (!prices.max || product.price <= prices.max) &&\r\n  (!prices.min || product.price >= prices.min);\r\n\r\nconst filterProducts = ({ products }) => {\r\n  const { data, filters } = products;\r\n\r\n  return data\r\n    .filter(filterColors(filters.colors))\r\n    .filter(filterPrices(filters.prices))\r\n    .sort(filterOrder(filters.order));\r\n};\r\n\r\nconst Products = () => {\r\n  const data = useSelector(filterProducts);\r\n\r\n  return (\r\n    <section>\r\n      <h2>Products</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Color</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(({ id, name, color, price }) => (\r\n            <tr key={id}>\r\n              <td>{name}</td>\r\n              <td>{color}</td>\r\n              <td>{price}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import Filter from './Filter';\nimport Products from './Products';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Filter />\n      <Products />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport products from './products';\r\n\r\nconst reducer = combineReducers({ products });\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}